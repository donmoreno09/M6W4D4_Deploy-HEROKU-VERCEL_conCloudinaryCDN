{"ast":null,"code":"var _jsxFileName = \"/home/esis/M6W1D4/frontend/src/contexts/BlogContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BlogContext = /*#__PURE__*/createContext();\nexport const BlogProvider = ({\n  children\n}) => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const baseUrl = 'http://localhost:3001';\n\n  // Get all blogs\n  const getBlogs = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${baseUrl}/blogs`);\n      setBlogs(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Create new blog\n  const createBlog = async blogData => {\n    try {\n      const response = await axios.post(`${baseUrl}/blogs`, blogData);\n      setBlogs([...blogs, response.data]);\n      return response.data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Update a blog\n  const updateBlog = async (id, blogData) => {\n    try {\n      const response = await axios.put(`${baseUrl}/blogs/${id}`, blogData);\n      setBlogs(blogs.map(blog => blog._id === id ? response.data : blog));\n      return response.data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Delete a blog\n  const deleteBlog = async id => {\n    try {\n      await axios.delete(`${baseUrl}/blogs/${id}`);\n      setBlogs(blogs.filter(blog => blog._id !== id));\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Get single blog\n  const getBlog = async id => {\n    try {\n      const response = await axios.get(`${baseUrl}/blogs/${id}`);\n      return response.data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n  useEffect(() => {\n    getBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlogContext.Provider, {\n    value: {\n      blogs,\n      loading,\n      error,\n      getBlogs,\n      createBlog,\n      updateBlog,\n      deleteBlog,\n      getBlog\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogProvider, \"tdNJmSjY/kFqj7ChzV/5mp6bsYQ=\");\n_c = BlogProvider;\nvar _c;\n$RefreshReg$(_c, \"BlogProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","BlogContext","BlogProvider","children","_s","blogs","setBlogs","loading","setLoading","error","setError","baseUrl","getBlogs","response","get","data","err","message","createBlog","blogData","post","updateBlog","id","put","map","blog","_id","deleteBlog","delete","filter","getBlog","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/esis/M6W1D4/frontend/src/contexts/BlogContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const BlogContext = createContext();\n\nexport const BlogProvider = ({ children }) => {\n  const [blogs, setBlogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  const baseUrl = 'http://localhost:3001';\n\n  // Get all blogs\n  const getBlogs = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${baseUrl}/blogs`);\n      setBlogs(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Create new blog\n  const createBlog = async (blogData) => {\n    try {\n      const response = await axios.post(`${baseUrl}/blogs`, blogData);\n      setBlogs([...blogs, response.data]);\n      return response.data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Update a blog\n  const updateBlog = async (id, blogData) => {\n    try {\n      const response = await axios.put(`${baseUrl}/blogs/${id}`, blogData);\n      setBlogs(blogs.map(blog => blog._id === id ? response.data : blog));\n      return response.data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Delete a blog\n  const deleteBlog = async (id) => {\n    try {\n      await axios.delete(`${baseUrl}/blogs/${id}`);\n      setBlogs(blogs.filter(blog => blog._id !== id));\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  // Get single blog\n  const getBlog = async (id) => {\n    try {\n      const response = await axios.get(`${baseUrl}/blogs/${id}`);\n      return response.data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n\n  useEffect(() => {\n    getBlogs();\n  }, []);\n\n  return (\n    <BlogContext.Provider value={{ \n      blogs, \n      loading, \n      error, \n      getBlogs, \n      createBlog, \n      updateBlog, \n      deleteBlog, \n      getBlog \n    }}>\n      {children}\n    </BlogContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}