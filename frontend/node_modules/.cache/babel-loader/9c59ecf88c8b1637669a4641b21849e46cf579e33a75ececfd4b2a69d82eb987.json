{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\esis\\\\Downloads\\\\M6W3D4\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Caricamento...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Reindirizza a login se non autenticato\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 41\n  }, this);\n};\n\n/* Spiegazione di questo componente:  \r\n\r\n*/\n_s(ProtectedRoute, \"F3aPsg481KjBH7Z7iYl6LJifZz0=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","Outlet","useAuth","Spinner","jsxDEV","_jsxDEV","ProtectedRoute","_s","isAuthenticated","loading","className","style","height","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/esis/Downloads/M6W3D4/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import { Navigate, Outlet } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst ProtectedRoute = () => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '80vh' }}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Caricamento...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Reindirizza a login se non autenticato\r\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\n/* Spiegazione di questo componente:  \r\n\r\n*/\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;EAE9C,IAAIO,OAAO,EAAE;IACX,oBACEJ,OAAA;MAAKK,SAAS,EAAC,kDAAkD;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC1FR,OAAA,CAACF,OAAO;QAACW,SAAS,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAAAF,QAAA,eACvCR,OAAA;UAAMK,SAAS,EAAC,iBAAiB;UAAAG,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV;;EAEA;EACA,OAAOX,eAAe,gBAAGH,OAAA,CAACJ,MAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGd,OAAA,CAACL,QAAQ;IAACoB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;;AAED;AACA;AACA;AAFAZ,EAAA,CAjBMD,cAAc;EAAA,QACmBJ,OAAO;AAAA;AAAAmB,EAAA,GADxCf,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}