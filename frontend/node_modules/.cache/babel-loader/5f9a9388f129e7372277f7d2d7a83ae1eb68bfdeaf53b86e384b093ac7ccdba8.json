{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor per aggiungere il token alle richieste\ninstance.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","Authorization","token","error","Promise","reject"],"sources":["C:/Users/esis/Downloads/M6W1D4/frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:3001',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Interceptor per aggiungere il token alle richieste\r\ninstance.interceptors.request.use(\r\n    (config) => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user) {\r\n            config.headers.Authorization = `Bearer ${user.token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAK;EACR,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,EAAE;IACND,MAAM,CAACJ,OAAO,CAACU,aAAa,GAAG,UAAUL,IAAI,CAACM,KAAK,EAAE;EACzD;EACA,OAAOP,MAAM;AACjB,CAAC,EACAQ,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAef,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}