{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\esis\\\\Downloads\\\\M6W3D1\\\\frontend\\\\src\\\\pages\\\\MyBlogs.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport axios from 'axios';\nimport BlogCard from '../components/BlogCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyBlogs = () => {\n  _s();\n  const {\n    user\n  } = useAuth(); // Ottieni i dati dell'utente loggato\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMyBlogs = async () => {\n      try {\n        setLoading(true);\n        console.log('User ID:', user._id); // Logga l'ID dell'utente loggato\n        const response = await axios.get(`http://localhost:3001/blogs/my-blogs?author=${user._id}`);\n        console.log('Response data:', response.data); // Logga la risposta del backend\n        setBlogs(response.data.blogs);\n      } catch (err) {\n        console.error('Errore nella richiesta:', err); // Logga l'errore\n        setError('Errore nel caricamento dei tuoi blog');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user) {\n      fetchMyBlogs();\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I Miei Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Caricamento in corso...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : blogs.length > 0 ? blogs.map(blog => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(BlogCard, {\n          blog: blog,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), \" \"]\n      }, blog._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Non hai ancora pubblicato nessun blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MyBlogs, \"LQZwsiPtSPJsG6Dpt1toaILwCcI=\", false, function () {\n  return [useAuth];\n});\n_c = MyBlogs;\nexport default MyBlogs;\nvar _c;\n$RefreshReg$(_c, \"MyBlogs\");","map":{"version":3,"names":["useState","useEffect","Container","Row","Col","Alert","useAuth","axios","BlogCard","jsxDEV","_jsxDEV","MyBlogs","_s","user","blogs","setBlogs","error","setError","loading","setLoading","fetchMyBlogs","console","log","_id","response","get","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","length","map","blog","md","_c","$RefreshReg$"],"sources":["C:/Users/esis/Downloads/M6W3D1/frontend/src/pages/MyBlogs.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport axios from 'axios';\r\nimport BlogCard from '../components/BlogCard';\r\n\r\nconst MyBlogs = () => {\r\n  const { user } = useAuth(); // Ottieni i dati dell'utente loggato\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMyBlogs = async () => {\r\n      try {\r\n        setLoading(true);\r\n        console.log('User ID:', user._id); // Logga l'ID dell'utente loggato\r\n        const response = await axios.get(`http://localhost:3001/blogs/my-blogs?author=${user._id}`);\r\n        console.log('Response data:', response.data); // Logga la risposta del backend\r\n        setBlogs(response.data.blogs);\r\n      } catch (err) {\r\n        console.error('Errore nella richiesta:', err); // Logga l'errore\r\n        setError('Errore nel caricamento dei tuoi blog');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    if (user) {\r\n      fetchMyBlogs();\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h1>I Miei Blog</h1>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      <Row>\r\n        {loading ? (\r\n          <p>Caricamento in corso...</p>\r\n        ) : blogs.length > 0 ? (\r\n          blogs.map((blog) => (\r\n            <Col key={blog._id} md={4} className=\"mb-4\">\r\n              <BlogCard blog={blog} user={user} /> {/* Mostra i blog con il componente BlogCard */}\r\n            </Col>\r\n          ))\r\n        ) : (\r\n          <p>Non hai ancora pubblicato nessun blog</p>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyBlogs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}