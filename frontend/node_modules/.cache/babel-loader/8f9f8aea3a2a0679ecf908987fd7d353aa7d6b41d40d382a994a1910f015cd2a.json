{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\esis\\\\Downloads\\\\M6W3D4\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Imposta il token nell'header di tutte le richieste axios\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Carica i dati dell'utente usando il token all'avvio\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await axios.get('http://localhost:3001/users/me');\n        setUser(res.data);\n      } catch (err) {\n        console.error('Errore nel caricamento dell\\'utente:', err);\n        localStorage.removeItem('token');\n        setToken(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, [token]);\n\n  // Funzione di login\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('http://localhost:3001/users/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      setToken(res.data.token);\n      setUser(res.data.user);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Errore nel login:', err);\n      return {\n        success: false,\n        error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Credenziali non valide'\n      };\n    }\n  };\n\n  // Funzione di logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  // Funzione di registrazione\n  const register = async userData => {\n    try {\n      const res = await axios.post('http://localhost:3001/users/register', userData);\n      return {\n        success: true,\n        data: res.data\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      return {\n        success: false,\n        error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Errore durante la registrazione'\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      logout,\n      register,\n      isAuthenticated: !!token // Restituisce true se c'è un token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"FXi2zprQ4FdDQp5Badf2jWUNTs8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","loadUser","res","get","data","err","console","error","removeItem","login","email","password","post","setItem","success","_err$response","_err$response$data","response","message","logout","register","userData","_err$response2","_err$response2$data","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/esis/Downloads/M6W3D4/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Imposta il token nell'header di tutte le richieste axios\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Carica i dati dell'utente usando il token all'avvio\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await axios.get('http://localhost:3001/users/me');\r\n        setUser(res.data);\r\n      } catch (err) {\r\n        console.error('Errore nel caricamento dell\\'utente:', err);\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, [token]);\r\n\r\n  // Funzione di login\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:3001/users/login', {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      localStorage.setItem('token', res.data.token);\r\n      setToken(res.data.token);\r\n      setUser(res.data.user);\r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Errore nel login:', err);\r\n      return {\r\n        success: false,\r\n        error: err.response?.data?.message || 'Credenziali non valide'\r\n      };\r\n    }\r\n  };\r\n\r\n  // Funzione di logout\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  // Funzione di registrazione\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:3001/users/register', userData);\r\n      return { success: true, data: res.data };\r\n    } catch (err) {\r\n      return {\r\n        success: false,\r\n        error: err.response?.data?.message || 'Errore durante la registrazione'\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      token,\r\n      loading,\r\n      login,\r\n      logout,\r\n      register,\r\n      isAuthenticated: !!token // Restituisce true se c'è un token\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,EAAE;MACTT,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUR,KAAK,EAAE;IACpE,CAAC,MAAM;MACL,OAAOT,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD;EACF,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;;EAEX;EACAV,SAAS,CAAC,MAAM;IACd,MAAMmB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI,CAACT,KAAK,EAAE;QACVK,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,IAAI;QACF,MAAMK,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,gCAAgC,CAAC;QAC7DZ,OAAO,CAACW,GAAG,CAACE,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEF,GAAG,CAAC;QAC1DX,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;QAChCf,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,SAAS;QACRI,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMiB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMT,GAAG,GAAG,MAAMnB,KAAK,CAAC6B,IAAI,CAAC,mCAAmC,EAAE;QAChEF,KAAK;QACLC;MACF,CAAC,CAAC;MAEFjB,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEX,GAAG,CAACE,IAAI,CAACZ,KAAK,CAAC;MAC7CC,QAAQ,CAACS,GAAG,CAACE,IAAI,CAACZ,KAAK,CAAC;MACxBD,OAAO,CAACW,GAAG,CAACE,IAAI,CAACd,IAAI,CAAC;MACtB,OAAO;QAAEwB,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOT,GAAG,EAAE;MAAA,IAAAU,aAAA,EAAAC,kBAAA;MACZV,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;MACvC,OAAO;QACLS,OAAO,EAAE,KAAK;QACdP,KAAK,EAAE,EAAAQ,aAAA,GAAAV,GAAG,CAACY,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcX,IAAI,cAAAY,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI;MACxC,CAAC;IACH;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBzB,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChCf,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAM6B,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMnB,GAAG,GAAG,MAAMnB,KAAK,CAAC6B,IAAI,CAAC,sCAAsC,EAAES,QAAQ,CAAC;MAC9E,OAAO;QAAEP,OAAO,EAAE,IAAI;QAAEV,IAAI,EAAEF,GAAG,CAACE;MAAK,CAAC;IAC1C,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAiB,cAAA,EAAAC,mBAAA;MACZ,OAAO;QACLT,OAAO,EAAE,KAAK;QACdP,KAAK,EAAE,EAAAe,cAAA,GAAAjB,GAAG,CAACY,QAAQ,cAAAK,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAclB,IAAI,cAAAmB,mBAAA,uBAAlBA,mBAAA,CAAoBL,OAAO,KAAI;MACxC,CAAC;IACH;EACF,CAAC;EAED,oBACEjC,OAAA,CAACC,WAAW,CAACsC,QAAQ;IAACC,KAAK,EAAE;MAC3BnC,IAAI;MACJE,KAAK;MACLI,OAAO;MACPa,KAAK;MACLU,MAAM;MACNC,QAAQ;MACRM,eAAe,EAAE,CAAC,CAAClC,KAAK,CAAC;IAC3B,CAAE;IAAAJ,QAAA,EACCA;EAAQ;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzC,EAAA,CA3FWF,YAAY;AAAA4C,EAAA,GAAZ5C,YAAY;AA6FzB,OAAO,MAAM6C,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrD,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC+C,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}