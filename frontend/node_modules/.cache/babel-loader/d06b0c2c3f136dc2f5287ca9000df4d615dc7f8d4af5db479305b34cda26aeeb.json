{"ast":null,"code":"import{useState,useRef}from'react';import{Container,Form,Button,Alert,Image,Row,Col}from'react-bootstrap';import{useAuth}from'../contexts/AuthContext';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Profile=()=>{const{user,login}=useAuth();const[formData,setFormData]=useState({firstName:(user===null||user===void 0?void 0:user.firstName)||'',lastName:(user===null||user===void 0?void 0:user.lastName)||'',currentPassword:'',newPassword:''});const[avatar,setAvatar]=useState(null);const[previewUrl,setPreviewUrl]=useState((user===null||user===void 0?void 0:user.avatar)||null);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[loading,setLoading]=useState(false);const fileInputRef=useRef(null);// useRef è un hook che restituisce un oggetto ref; Questo oggetto ref può essere utilizzato per accedere all'elemento DOM\nconst handleSubmit=async e=>{e.preventDefault();setLoading(true);try{// Preparare i dati del form con FormData per gestire i file\nconst formDataToSend=new FormData();formDataToSend.append('firstName',formData.firstName);formDataToSend.append('lastName',formData.lastName);// Aggiungi password solo se sono state inserite\nif(formData.currentPassword){formDataToSend.append('currentPassword',formData.currentPassword);}if(formData.newPassword){formDataToSend.append('newPassword',formData.newPassword);}// Aggiungi il file dell'avatar se è stato selezionato\nif(avatar){formDataToSend.append('avatar',avatar);}const response=await axios.put(`http://localhost:3001/users/${user._id}`,formDataToSend,{headers:{'Content-Type':'multipart/form-data'}});// Aggiorna i dati dell'utente nel contesto di autenticazione\nlogin(response.data);setSuccess('Profilo aggiornato con successo');setError('');// Resetta i campi password\nsetFormData(prev=>({...prev,currentPassword:'',newPassword:''}));}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Errore durante l\\'aggiornamento del profilo');setSuccess('');}finally{setLoading(false);}};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleFileChange=e=>{if(e.target.files&&e.target.files[0]){const selectedFile=e.target.files[0];// Verifica che il file sia un'immagine\nif(!selectedFile.type.match('image.*')){setError('Seleziona un file immagine valido (JPEG, PNG).');return;}// Verifica la dimensione del file (max 2MB)\nif(selectedFile.size>2*1024*1024){setError('L\\'immagine non deve superare i 2MB.');return;}setAvatar(selectedFile);// Crea un'anteprima dell'immagine\nconst reader=new FileReader();reader.onloadend=()=>{setPreviewUrl(reader.result);};reader.readAsDataURL(selectedFile);// reader è un oggetto che legge il file selezionato e restituisce un URL che può essere utilizzato come src per un'immagine\n// quidni FileReader() è un metodo che legge il contenuto di un file e restituisce il contenuto in un formato che può essere utilizzato per l'elaborazione successiva\n// onloadend è un evento che si verifica quando il file è stato completamente caricato\n// reader.result restituisce l'URL del file caricato\n// setPreviewUrl imposta l'URL dell'immagine come URL del file caricato\n// reader.readAsDataURL(selectedFile) legge il contenuto del file come URL\nsetError('');// Reset dell'errore se tutto è andato a buon fine\n}};const triggerFileInput=()=>{fileInputRef.current.click();};//Questo metodo viene chiamato quando si fa clic sull'icona di modifica dell'avatar\n//Fa si che il file input venga cliccato quando si fa clic sull'icona di modifica dell'avatar\n// Funzione per mostrare l'avatar dell'utente o un placeholder\nconst getProfileImage=()=>{if(previewUrl){return previewUrl;}else if(user!==null&&user!==void 0&&user.avatar){return user.avatar;}else{return`https://ui-avatars.com/api/?background=0D8ABC&color=fff&name=${user===null||user===void 0?void 0:user.firstName}+${user===null||user===void 0?void 0:user.lastName}`;}};return/*#__PURE__*/_jsxs(Container,{className:\"mt-5\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Profilo\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:success}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(Col,{xs:12,md:4,className:\"text-center mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative d-inline-block\",children:[/*#__PURE__*/_jsx(Image,{src:getProfileImage(),alt:\"Profile\",roundedCircle:true,style:{width:'150px',height:'150px',objectFit:'cover'},className:\"border\"}),/*#__PURE__*/_jsx(\"div\",{className:\"position-absolute bottom-0 end-0 bg-primary rounded-circle p-2\",style:{cursor:'pointer'},onClick:triggerFileInput,children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-pencil-fill text-white\"})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:handleFileChange,style:{display:'none'},accept:\"image/*\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",size:\"sm\",onClick:triggerFileInput,className:\"mt-2\",children:\"Cambia foto profilo\"})})]}),/*#__PURE__*/_jsx(Col,{xs:12,md:8,children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Nome\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"firstName\",value:formData.firstName,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Cognome\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"lastName\",value:formData.lastName,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h5\",{children:\"Modifica Password\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password Attuale\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",name:\"currentPassword\",value:formData.currentPassword,onChange:handleChange})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Nuova Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",name:\"newPassword\",value:formData.newPassword,onChange:handleChange}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Lascia vuoto per mantenere la password attuale.\"})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:loading,children:loading?'Aggiornamento in corso...':'Aggiorna Profilo'})]})})]})]});};export default Profile;","map":{"version":3,"names":["useState","useRef","Container","Form","Button","Alert","Image","Row","Col","useAuth","axios","jsx","_jsx","jsxs","_jsxs","Profile","user","login","formData","setFormData","firstName","lastName","currentPassword","newPassword","avatar","setAvatar","previewUrl","setPreviewUrl","error","setError","success","setSuccess","loading","setLoading","fileInputRef","handleSubmit","e","preventDefault","formDataToSend","FormData","append","response","put","_id","headers","data","prev","err","_err$response","_err$response$data","message","handleChange","target","name","value","handleFileChange","files","selectedFile","type","match","size","reader","FileReader","onloadend","result","readAsDataURL","triggerFileInput","current","click","getProfileImage","className","children","variant","xs","md","src","alt","roundedCircle","style","width","height","objectFit","cursor","onClick","ref","onChange","display","accept","onSubmit","Group","Label","Control","required","Text","disabled"],"sources":["C:/Users/esis/Downloads/M6W4D4/frontend/src/pages/Profile.jsx"],"sourcesContent":["import { useState, useRef } from 'react';\r\nimport { Container, Form, Button, Alert, Image, Row, Col } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport axios from 'axios';\r\n\r\nconst Profile = () => {\r\n  const { user, login } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    firstName: user?.firstName || '',\r\n    lastName: user?.lastName || '',\r\n    currentPassword: '',\r\n    newPassword: '',\r\n  });\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState(user?.avatar || null);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const fileInputRef = useRef(null); // useRef è un hook che restituisce un oggetto ref; Questo oggetto ref può essere utilizzato per accedere all'elemento DOM\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      // Preparare i dati del form con FormData per gestire i file\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append('firstName', formData.firstName);\r\n      formDataToSend.append('lastName', formData.lastName);\r\n      \r\n      // Aggiungi password solo se sono state inserite\r\n      if (formData.currentPassword) {\r\n        formDataToSend.append('currentPassword', formData.currentPassword);\r\n      }\r\n      if (formData.newPassword) {\r\n        formDataToSend.append('newPassword', formData.newPassword);\r\n      }\r\n      \r\n      // Aggiungi il file dell'avatar se è stato selezionato\r\n      if (avatar) {\r\n        formDataToSend.append('avatar', avatar);\r\n      }\r\n      \r\n      const response = await axios.put(\r\n        `http://localhost:3001/users/${user._id}`, \r\n        formDataToSend,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        }\r\n      );\r\n      \r\n      // Aggiorna i dati dell'utente nel contesto di autenticazione\r\n      login(response.data);\r\n      \r\n      setSuccess('Profilo aggiornato con successo');\r\n      setError('');\r\n      \r\n      // Resetta i campi password\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        currentPassword: '',\r\n        newPassword: '',\r\n      }));\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Errore durante l\\'aggiornamento del profilo');\r\n      setSuccess('');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const selectedFile = e.target.files[0];\r\n      \r\n      // Verifica che il file sia un'immagine\r\n      if (!selectedFile.type.match('image.*')) {\r\n        setError('Seleziona un file immagine valido (JPEG, PNG).');\r\n        return;\r\n      }\r\n      \r\n      // Verifica la dimensione del file (max 2MB)\r\n      if (selectedFile.size > 2 * 1024 * 1024) {\r\n        setError('L\\'immagine non deve superare i 2MB.');\r\n        return;\r\n      }\r\n      \r\n      setAvatar(selectedFile);\r\n      \r\n      // Crea un'anteprima dell'immagine\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewUrl(reader.result);\r\n      };\r\n      reader.readAsDataURL(selectedFile);\r\n\r\n      // reader è un oggetto che legge il file selezionato e restituisce un URL che può essere utilizzato come src per un'immagine\r\n      // quidni FileReader() è un metodo che legge il contenuto di un file e restituisce il contenuto in un formato che può essere utilizzato per l'elaborazione successiva\r\n      // onloadend è un evento che si verifica quando il file è stato completamente caricato\r\n      // reader.result restituisce l'URL del file caricato\r\n      // setPreviewUrl imposta l'URL dell'immagine come URL del file caricato\r\n      // reader.readAsDataURL(selectedFile) legge il contenuto del file come URL\r\n\r\n\r\n      setError(''); // Reset dell'errore se tutto è andato a buon fine\r\n    }\r\n  };\r\n\r\n  const triggerFileInput = () => {\r\n    fileInputRef.current.click();\r\n  }; //Questo metodo viene chiamato quando si fa clic sull'icona di modifica dell'avatar\r\n  //Fa si che il file input venga cliccato quando si fa clic sull'icona di modifica dell'avatar\r\n\r\n  // Funzione per mostrare l'avatar dell'utente o un placeholder\r\n  const getProfileImage = () => {\r\n    if (previewUrl) {\r\n      return previewUrl;\r\n    } else if (user?.avatar) {\r\n      return user.avatar;\r\n    } else {\r\n      return `https://ui-avatars.com/api/?background=0D8ABC&color=fff&name=${user?.firstName}+${user?.lastName}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2>Profilo</h2>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {success && <Alert variant=\"success\">{success}</Alert>}\r\n      \r\n      <Row className=\"mb-4\">\r\n        <Col xs={12} md={4} className=\"text-center mb-3\">\r\n          <div className=\"position-relative d-inline-block\">\r\n            <Image\r\n              src={getProfileImage()}\r\n              alt=\"Profile\"\r\n              roundedCircle\r\n              style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n              className=\"border\"\r\n            />\r\n            <div \r\n              className=\"position-absolute bottom-0 end-0 bg-primary rounded-circle p-2\"\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={triggerFileInput}\r\n            >\r\n              <i className=\"bi bi-pencil-fill text-white\"></i>\r\n            </div>\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            style={{ display: 'none' }}\r\n            accept=\"image/*\"\r\n          />\r\n          <div className=\"mt-2\">\r\n            <Button \r\n              variant=\"outline-secondary\" \r\n              size=\"sm\"\r\n              onClick={triggerFileInput}\r\n              className=\"mt-2\"\r\n            >\r\n              Cambia foto profilo\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n        \r\n        <Col xs={12} md={8}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Nome</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={formData.firstName}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Cognome</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={formData.lastName}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <hr />\r\n            <h5>Modifica Password</h5>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Password Attuale</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"currentPassword\"\r\n                value={formData.currentPassword}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Nuova Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                value={formData.newPassword}\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Lascia vuoto per mantenere la password attuale.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Button type=\"submit\" disabled={loading}>\r\n              {loading ? 'Aggiornamento in corso...' : 'Aggiorna Profilo'}\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}